find_package(pprint CONFIG REQUIRED)
find_package(range-v3 CONFIG REQUIRED)
find_package(Qt5 COMPONENTS Widgets LinguistTools REQUIRED)    

add_executable(p001_two_sum p001_two_sum.cpp)
add_executable(p015_3Sum p015_3Sum.cpp)
add_executable(p017_phone_number p017_phone_number.cpp)
add_executable(p018_4Sum p018_4Sum.cpp)
add_executable(p019_remove_node p019_remove_node.cpp)
add_executable(p020_parenthess p020_parenthess.cpp)
add_executable(p024_swap_node p024_swap_node.cpp)
add_executable(p027_remove_element p027_remove_element.cpp)
add_executable(p028_strStr p028_strStr.cpp)
add_executable(p035_searchInsert p035_searchInsert.cpp)
add_executable(p037_solveSudoku p037_solveSudoku.cpp)
add_executable(p037_solveSudoku_1 p037_solveSudoku_1.cpp)
add_executable(p039_combinationSum p039_combinationSum.cpp)
add_executable(p040_combinationSum2 p040_combinationSum2.cpp)
add_executable(p045_jump p045_jump.cpp)
add_executable(p046_permute p046_permute.cpp)
add_executable(p047_permuteUnique p047_permuteUnique.cpp)
add_executable(p051_solveNQueens p051_solveNQueens.cpp)
add_executable(p051_solveNQueens_1 p051_solveNQueens_1.cpp)
add_executable(p053_maxSubArray p053_maxSubArray.cpp)
add_executable(p055_canJump p055_canJump.cpp)
add_executable(p056_merge p056_merge.cpp)
add_executable(p059_generateMatrix p059_generateMatrix.cpp)
add_executable(p062_uniquePaths p062_uniquePaths.cpp)
add_executable(p063_uniquePathsWithObstacles p063_uniquePathsWithObstacles.cpp)
add_executable(p070_climbStairs p070_climbStairs.cpp)
add_executable(p072_minDistance p072_minDistance.cpp)
add_executable(p077_combine p077_combine.cpp)
add_executable(p078_subsets p078_subsets.cpp)
add_executable(p090_subsetsWithDup p090_subsetsWithDup.cpp)
add_executable(p093_restoreIpAddresses p093_restoreIpAddresses.cpp)
add_executable(p096_numTrees p096_numTrees.cpp)
add_executable(p098_isValidBST p098_isValidBST.cpp)
add_executable(p102_levelOrder p102_levelOrder.cpp)
add_executable(p101_isSymmetric p101_isSymmetric.cpp)
add_executable(p104_maxDepth p104_maxDepth.cpp)
add_executable(p106_buildTree p106_buildTree.cpp)
add_executable(p108_sortedArrayToBST p108_sortedArrayToBST.cpp)
add_executable(p110_isBalanced p110_isBalanced.cpp)
add_executable(p111_minDepth p111_minDepth.cpp)
add_executable(p112_hasPathSum p112_hasPathSum.cpp)
add_executable(p115_numDistinct p115_numDistinct.cpp)
add_executable(p121_maxProfit p121_maxProfit.cpp)
add_executable(p122_maxProfit p122_maxProfit.cpp)
add_executable(p123_maxProfit p123_maxProfit.cpp)
add_executable(p131_partition p131_partition.cpp)
add_executable(p134_canCompleteCircuit p134_canCompleteCircuit.cpp)
add_executable(p135_candy p135_candy.cpp)
add_executable(p139_wordBreak p139_wordBreak.cpp)
add_executable(p139_wordBreak_memoization p139_wordBreak_memoization.cpp)
add_executable(p142_detectCycle p142_detectCycle.cpp)
add_executable(p150_evalRPN p150_evalRPN.cpp)
add_executable(p151_reverseWords p151_reverseWords.cpp)
add_executable(p160_getIntersectionNode p160_getIntersectionNode.cpp)
add_executable(p198_rob p198_rob.cpp)
add_executable(p202_isHappy p202_isHappy.cpp)
add_executable(p203_removeElements p203_removeElements.cpp)
add_executable(p206_reverseList p206_reverseList.cpp)

target_link_libraries(p015_3Sum PRIVATE pprint::pprint)
target_link_libraries(p017_phone_number PRIVATE pprint::pprint)
target_link_libraries(p018_4Sum PRIVATE pprint::pprint)
target_link_libraries(p019_remove_node PRIVATE pprint::pprint)
target_link_libraries(p020_parenthess PRIVATE pprint::pprint)
target_link_libraries(p024_swap_node PRIVATE pprint::pprint)
target_link_libraries(p027_remove_element PRIVATE pprint::pprint)
target_link_libraries(p028_strStr PRIVATE pprint::pprint)
target_link_libraries(p035_searchInsert PRIVATE pprint::pprint)
target_link_libraries(p037_solveSudoku PRIVATE pprint::pprint)
target_link_libraries(p037_solveSudoku_1 PRIVATE pprint::pprint)
target_link_libraries(p039_combinationSum PRIVATE pprint::pprint)
target_link_libraries(p040_combinationSum2 PRIVATE pprint::pprint)
target_link_libraries(p045_jump PRIVATE pprint::pprint)
target_link_libraries(p046_permute PRIVATE pprint::pprint)
target_link_libraries(p047_permuteUnique PRIVATE pprint::pprint)
target_link_libraries(p051_solveNQueens PRIVATE pprint::pprint)
target_link_libraries(p051_solveNQueens_1 PRIVATE pprint::pprint)
target_link_libraries(p053_maxSubArray PRIVATE pprint::pprint)
target_link_libraries(p055_canJump PRIVATE pprint::pprint)
target_link_libraries(p056_merge PRIVATE pprint::pprint)
target_link_libraries(p059_generateMatrix PRIVATE pprint::pprint)
target_link_libraries(p062_uniquePaths PRIVATE pprint::pprint)
target_link_libraries(p063_uniquePathsWithObstacles PRIVATE pprint::pprint)
target_link_libraries(p070_climbStairs PRIVATE pprint::pprint)
target_link_libraries(p072_minDistance PRIVATE pprint::pprint)
target_link_libraries(p077_combine PRIVATE pprint::pprint)
target_link_libraries(p078_subsets PRIVATE pprint::pprint)
target_link_libraries(p090_subsetsWithDup PRIVATE pprint::pprint)
target_link_libraries(p093_restoreIpAddresses PRIVATE pprint::pprint)
target_link_libraries(p096_numTrees PRIVATE pprint::pprint)
target_link_libraries(p098_isValidBST PRIVATE pprint::pprint)
target_link_libraries(p102_levelOrder PRIVATE pprint::pprint)
target_link_libraries(p101_isSymmetric PRIVATE pprint::pprint)
target_link_libraries(p104_maxDepth PRIVATE pprint::pprint)
target_link_libraries(p106_buildTree PRIVATE pprint::pprint)
target_link_libraries(p106_buildTree PRIVATE range-v3 range-v3-meta range-v3::meta range-v3-concepts)
target_link_libraries(p108_sortedArrayToBST PRIVATE pprint::pprint)
target_link_libraries(p110_isBalanced PRIVATE pprint::pprint)
target_link_libraries(p111_minDepth PRIVATE pprint::pprint)
target_link_libraries(p115_numDistinct PRIVATE pprint::pprint)
target_link_libraries(p131_partition PRIVATE pprint::pprint)
target_link_libraries(p135_candy PRIVATE pprint::pprint)
target_link_libraries(p151_reverseWords PRIVATE range-v3 range-v3-meta range-v3::meta range-v3-concepts)
# target_link_libraries(p151_reverseWords PRIVATE Qt5::Widgets)

